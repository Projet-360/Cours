/*! For license information please see main.26669c285c4b8abeb39e.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateboilerplate("main",{"./app/index.js":(e,t,a)=>{a.r(t);var s=a("./node_modules/lodash/each.js"),n=a.n(s),o=a("./app/components/Preloader.js"),i=a("./app/pages/Home/index.js"),r=a("./app/pages/About/index.js"),l=a("./app/pages/Collections/index.js"),c=a("./app/pages/Detail/index.js");new class{constructor(){this.createPreloader(),this.creatContent(),this.createPages(),this.addLinkListeners()}createPreloader(){this.preloader=new o.default,this.preloader.once("completed",(e=>this.onPreloader))}creatContent(){this.content=document.querySelector(".content"),this.template=this.content.getAttribute("data-template")}createPages(){this.pages={home:new i.default,about:new r.default,collections:new l.default,detail:new c.default},this.page=this.pages[this.template],this.page.create(),this.page.show()}onPreloader(){this.preloader.destroy()}async onChange(e){await this.page.hide();const t=await window.fetch(e);if(200===t.status){const e=await t.text(),a=document.createElement("div");a.innerHTML=e;const s=a.querySelector(".content");this.template=s.getAttribute("data-template"),this.content.setAttribute("data-template",this.template),this.content.innerHTML=s.innerHTML,this.page=this.pages[this.template],this.page.create(),this.page.show()}else console.log("C'est la merde mon gars !")}addLinkListeners(){const e=document.querySelectorAll("a");n()(e,(e=>{e.onclick=t=>{const{href:a}=e;t.preventDefault(),this.onChange(a)}}))}}}},(function(e){e.h=()=>"05d7c3fde37bbb42ea16"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4yNjY2OWMyODVjNGI4YWJlYjM5ZS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7NlRBb0ZBLElBM0VBLE1BQ0lBLGNBQ0lDLEtBQUtDLGtCQUNMRCxLQUFLRSxlQUNMRixLQUFLRyxjQUNMSCxLQUFLSSxtQkFHVEgsa0JBQ0lELEtBQUtLLFVBQVksSUFBSUMsRUFBQUEsUUFDckJOLEtBQUtLLFVBQVVFLEtBQUssYUFBYUMsR0FBS1IsS0FBS1MsY0FHL0NQLGVBQ0lGLEtBQUtVLFFBQVVDLFNBQVNDLGNBQWMsWUFDdENaLEtBQUthLFNBQVdiLEtBQUtVLFFBQVFJLGFBQWEsaUJBRzlDWCxjQUNJSCxLQUFLZSxNQUFRLENBQ1QsS0FBUSxJQUFJQyxFQUFBQSxRQUNaLE1BQVMsSUFBSUMsRUFBQUEsUUFDYixZQUFlLElBQUlDLEVBQUFBLFFBQ25CLE9BQVUsSUFBSUMsRUFBQUEsU0FHbEJuQixLQUFLb0IsS0FBT3BCLEtBQUtlLE1BQU1mLEtBQUthLFVBQzVCYixLQUFLb0IsS0FBS0MsU0FDVnJCLEtBQUtvQixLQUFLRSxPQUdkYixjQUNJVCxLQUFLSyxVQUFVa0IsVUFHTCxlQUFFQyxTQUNOeEIsS0FBS29CLEtBQUtLLE9BRWhCLE1BQU1DLFFBQWdCQyxPQUFPQyxNQUFNSixHQUVuQyxHQUF3QixNQUFuQkUsRUFBUUcsT0FBZ0IsQ0FDekIsTUFBTUMsUUFBYUosRUFBUUssT0FDckJDLEVBQU1yQixTQUFTc0IsY0FBYyxPQUVuQ0QsRUFBSUUsVUFBWUosRUFFaEIsTUFBTUssRUFBYUgsRUFBSXBCLGNBQWMsWUFFckNaLEtBQUthLFNBQVdzQixFQUFXckIsYUFBYSxpQkFFeENkLEtBQUtVLFFBQVEwQixhQUFhLGdCQUFpQnBDLEtBQUthLFVBQ2hEYixLQUFLVSxRQUFRd0IsVUFBWUMsRUFBV0QsVUFFcENsQyxLQUFLb0IsS0FBT3BCLEtBQUtlLE1BQU1mLEtBQUthLFVBQzVCYixLQUFLb0IsS0FBS0MsU0FDVnJCLEtBQUtvQixLQUFLRSxZQUVWZSxRQUFRQyxJQUFJLDZCQUlwQmxDLG1CQUNJLE1BQU1tQyxFQUFRNUIsU0FBUzZCLGlCQUFpQixLQUV4Q0MsR0FBQUEsQ0FBS0YsR0FBT0csSUFDUkEsRUFBS0MsUUFBVUMsSUFDWCxNQUFNLEtBQUVDLEdBQVNILEVBQ2pCRSxFQUFNRSxpQkFFTjlDLEtBQUsrQyxTQUFTRix3QkM5RTlCRyxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9hcHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlYWNoIGZyb20gJ2xvZGFzaC9lYWNoJ1xyXG5cclxuaW1wb3J0IFByZWxvYWRlciBmcm9tICcuL2NvbXBvbmVudHMvUHJlbG9hZGVyJ1xyXG5cclxuaW1wb3J0IEhvbWUgZnJvbSAnLi9wYWdlcy9Ib21lJ1xyXG5pbXBvcnQgQWJvdXQgZnJvbSAnLi9wYWdlcy9BYm91dCdcclxuaW1wb3J0IENvbGxlY3Rpb25zIGZyb20gJy4vcGFnZXMvQ29sbGVjdGlvbnMnXHJcbmltcG9ydCBEZXRhaWwgZnJvbSAnLi9wYWdlcy9EZXRhaWwnXHJcblxyXG5jbGFzcyBBcHAge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVQcmVsb2FkZXIoKVxyXG4gICAgICAgIHRoaXMuY3JlYXRDb250ZW50KClcclxuICAgICAgICB0aGlzLmNyZWF0ZVBhZ2VzKClcclxuICAgICAgICB0aGlzLmFkZExpbmtMaXN0ZW5lcnMoKVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZVByZWxvYWRlcigpIHtcclxuICAgICAgICB0aGlzLnByZWxvYWRlciA9IG5ldyBQcmVsb2FkZXIoKVxyXG4gICAgICAgIHRoaXMucHJlbG9hZGVyLm9uY2UoJ2NvbXBsZXRlZCcsIF8gPT4gdGhpcy5vblByZWxvYWRlcilcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdENvbnRlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKVxyXG4gICAgICAgIHRoaXMudGVtcGxhdGUgPSB0aGlzLmNvbnRlbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXRlbXBsYXRlJylcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVQYWdlcygpIHtcclxuICAgICAgICB0aGlzLnBhZ2VzID0ge1xyXG4gICAgICAgICAgICAnaG9tZSc6IG5ldyBIb21lKCksXHJcbiAgICAgICAgICAgICdhYm91dCc6IG5ldyBBYm91dCgpLFxyXG4gICAgICAgICAgICAnY29sbGVjdGlvbnMnOiBuZXcgQ29sbGVjdGlvbnMoKSxcclxuICAgICAgICAgICAgJ2RldGFpbCc6IG5ldyBEZXRhaWwoKSAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5wYWdlID0gdGhpcy5wYWdlc1t0aGlzLnRlbXBsYXRlXVxyXG4gICAgICAgIHRoaXMucGFnZS5jcmVhdGUoKVxyXG4gICAgICAgIHRoaXMucGFnZS5zaG93KClcclxuICAgIH1cclxuXHJcbiAgICBvblByZWxvYWRlcigpIHtcclxuICAgICAgICB0aGlzLnByZWxvYWRlci5kZXN0cm95KClcclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBvbkNoYW5nZSAodXJsKSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5wYWdlLmhpZGUoKVxyXG5cclxuICAgICAgICBjb25zdCByZXF1ZXN0ID0gYXdhaXQgd2luZG93LmZldGNoKHVybClcclxuXHJcbiAgICAgICAgaWYgKCByZXF1ZXN0LnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGh0bWwgPSBhd2FpdCByZXF1ZXN0LnRleHQoKVxyXG4gICAgICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG5cclxuICAgICAgICAgICAgZGl2LmlubmVySFRNTCA9IGh0bWxcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGRpdkNvbnRlbnQgPSBkaXYucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKVxyXG5cclxuICAgICAgICAgICAgdGhpcy50ZW1wbGF0ZSA9IGRpdkNvbnRlbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXRlbXBsYXRlJylcclxuXHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGVtcGxhdGUnLCB0aGlzLnRlbXBsYXRlKVxyXG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQuaW5uZXJIVE1MID0gZGl2Q29udGVudC5pbm5lckhUTUxcclxuXHJcbiAgICAgICAgICAgIHRoaXMucGFnZSA9IHRoaXMucGFnZXNbdGhpcy50ZW1wbGF0ZV1cclxuICAgICAgICAgICAgdGhpcy5wYWdlLmNyZWF0ZSgpXHJcbiAgICAgICAgICAgIHRoaXMucGFnZS5zaG93KClcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkMnZXN0IGxhIG1lcmRlIG1vbiBnYXJzICFcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZExpbmtMaXN0ZW5lcnMgKCkge1xyXG4gICAgICAgIGNvbnN0IGxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYScpXHJcblxyXG4gICAgICAgIGVhY2gobGlua3MsIGxpbmsgPT4ge1xyXG4gICAgICAgICAgICBsaW5rLm9uY2xpY2sgPSBldmVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB7IGhyZWYgfSA9IGxpbmtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuXHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uQ2hhbmdlKGhyZWYpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59XHJcblxyXG5uZXcgQXBwKCkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCIwNWQ3YzNmZGUzN2JiYjQyZWExNlwiKSJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsInRoaXMiLCJjcmVhdGVQcmVsb2FkZXIiLCJjcmVhdENvbnRlbnQiLCJjcmVhdGVQYWdlcyIsImFkZExpbmtMaXN0ZW5lcnMiLCJwcmVsb2FkZXIiLCJQcmVsb2FkZXIiLCJvbmNlIiwiXyIsIm9uUHJlbG9hZGVyIiwiY29udGVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRlbXBsYXRlIiwiZ2V0QXR0cmlidXRlIiwicGFnZXMiLCJIb21lIiwiQWJvdXQiLCJDb2xsZWN0aW9ucyIsIkRldGFpbCIsInBhZ2UiLCJjcmVhdGUiLCJzaG93IiwiZGVzdHJveSIsInVybCIsImhpZGUiLCJyZXF1ZXN0Iiwid2luZG93IiwiZmV0Y2giLCJzdGF0dXMiLCJodG1sIiwidGV4dCIsImRpdiIsImNyZWF0ZUVsZW1lbnQiLCJpbm5lckhUTUwiLCJkaXZDb250ZW50Iiwic2V0QXR0cmlidXRlIiwiY29uc29sZSIsImxvZyIsImxpbmtzIiwicXVlcnlTZWxlY3RvckFsbCIsImVhY2giLCJsaW5rIiwib25jbGljayIsImV2ZW50IiwiaHJlZiIsInByZXZlbnREZWZhdWx0Iiwib25DaGFuZ2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=