/*! For license information please see main.6288558cd27dbf9f50a3.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateboilerplate("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});var i=s("./node_modules/gsap/index.js"),l=s("./node_modules/prefix/index.js"),n=s.n(l),o=s("./node_modules/lodash/each.js"),r=s.n(o);class a{constructor({id:e,element:t,elements:s}){this.id=e,this.selector=t,this.selectorChildren={...s},this.transformPrefix=n()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0,limit:0},r()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}show(){return new Promise((e=>{this.animationIn=i.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1,onComplete:e}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=i.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{deltaY:t}=e;console.log(this.scroll.target),this.scroll.target+=t,console.log(this.scroll.target)}onResize(){this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.target<.01&&(target=0),this.scroll.current=i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"5f8232a49aa092c3ae5c"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi42Mjg4NTU4Y2QyN2RiZjlmNTBhMy5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7MlBBSWUsTUFBTUEsRUFDakJDLGFBQWEsR0FDVEMsRUFEUyxRQUVUQyxFQUZTLFNBR1RDLElBRUFDLEtBQUtILEdBQUtBLEVBQ1ZHLEtBQUtDLFNBQVdILEVBQ2hCRSxLQUFLRSxpQkFBbUIsSUFDakJILEdBR1BDLEtBQUtHLGdCQUFrQkMsR0FBQUEsQ0FBTyxhQUU5QkosS0FBS0ssa0JBQW9CTCxLQUFLTSxhQUFhQyxLQUFLUCxNQUdwRFEsU0FDSVIsS0FBS0YsUUFBVVcsU0FBU0MsY0FBY1YsS0FBS0MsVUFDM0NELEtBQUtELFNBQVcsR0FFaEJDLEtBQUtXLE9BQVMsQ0FDVkMsUUFBUyxFQUNUQyxPQUFRLEVBQ1JDLEtBQUssRUFDTEMsTUFBTyxHQUdYQyxHQUFBQSxDQUFLaEIsS0FBS0Usa0JBQWtCLENBQUNlLEVBQU9DLEtBQzVCRCxhQUFpQkUsT0FBT0MsYUFBZUgsYUFBaUJFLE9BQU9FLFVBQVlDLE1BQU1DLFFBQVFOLEdBQ3pGakIsS0FBS0QsU0FBU21CLEdBQU9ELEdBRXJCakIsS0FBS0QsU0FBU21CLEdBQU9ULFNBQVNlLGlCQUFpQlAsR0FFYixJQUE5QmpCLEtBQUtELFNBQVNtQixHQUFLTyxPQUNuQnpCLEtBQUtELFNBQVNtQixHQUFPLEtBQ2dCLElBQTlCbEIsS0FBS0QsU0FBU21CLEdBQUtPLFNBQzFCekIsS0FBS0QsU0FBU21CLEdBQU9ULFNBQVNDLGNBQWNPLFFBTTVEUyxPQUNJLE9BQU8sSUFBSUMsU0FBUUMsSUFDZjVCLEtBQUs2QixZQUFjQyxFQUFBQSxRQUFBQSxXQUVuQjlCLEtBQUs2QixZQUFZRSxPQUFPL0IsS0FBS0YsUUFBUyxDQUNsQ2tDLFVBQVcsR0FFZixDQUNJQSxVQUFXLEVBQ1hDLFdBQVlMLElBR2hCNUIsS0FBSzZCLFlBQVlLLE1BQU1DLElBQ25CbkMsS0FBS29DLG9CQUNMUixVQUtaUyxPQUNJLE9BQU8sSUFBSVYsU0FBUUMsSUFDZjVCLEtBQUtzQyx1QkFFTHRDLEtBQUt1QyxhQUFlVCxFQUFBQSxRQUFBQSxXQUVwQjlCLEtBQUt1QyxhQUFhQyxHQUFHeEMsS0FBS0YsUUFBUyxDQUMvQmtDLFVBQVcsRUFDWEMsV0FBWUwsT0FLeEJ0QixhQUFhbUMsR0FDVCxNQUFNLE9BQUVDLEdBQVdELEVBQ25CRSxRQUFRQyxJQUFJNUMsS0FBS1csT0FBT0UsUUFDeEJiLEtBQUtXLE9BQU9FLFFBQVU2QixFQUN0QkMsUUFBUUMsSUFBSTVDLEtBQUtXLE9BQU9FLFFBRzVCZ0MsV0FDSTdDLEtBQUtXLE9BQU9JLE1BQVFmLEtBQUtELFNBQVMrQyxRQUFRQyxhQUFlNUIsT0FBTzZCLFlBR3BFQyxTQUNJakQsS0FBS1csT0FBT0UsT0FBU2lCLEVBQUFBLFFBQUFBLE1BQUFBLE1BQWlCLEVBQUc5QixLQUFLVyxPQUFPSSxNQUFPZixLQUFLVyxPQUFPRSxRQUVwRWIsS0FBS1csT0FBT0UsT0FBUyxNQUNyQkEsT0FBUyxHQUdiYixLQUFLVyxPQUFPQyxRQUFVa0IsRUFBQUEsUUFBQUEsTUFBQUEsWUFBdUI5QixLQUFLVyxPQUFPQyxRQUFTWixLQUFLVyxPQUFPRSxPQUFRLElBRWxGYixLQUFLRCxTQUFTK0MsVUFDZDlDLEtBQUtELFNBQVMrQyxRQUFRSSxNQUFNbEQsS0FBS0csaUJBQW9CLGVBQWNILEtBQUtXLE9BQU9DLGNBSXZGd0Isb0JBQ0lqQixPQUFPZ0MsaUJBQWlCLGFBQWNuRCxLQUFLSyxtQkFHL0NpQyx1QkFDSW5CLE9BQU9pQyxvQkFBb0IsYUFBY3BELEtBQUtLLG9DQzdHdERnRCxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvLi9hcHAvY2xhc3Nlcy9QYWdlLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR1NBUCBmcm9tICdnc2FwJ1xyXG5pbXBvcnQgUHJlZml4IGZyb20gJ3ByZWZpeCdcclxuaW1wb3J0IGVhY2ggZnJvbSAnbG9kYXNoL2VhY2gnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWdlIHtcclxuICAgIGNvbnN0cnVjdG9yICh7XHJcbiAgICAgICAgaWQsXHJcbiAgICAgICAgZWxlbWVudCxcclxuICAgICAgICBlbGVtZW50c1xyXG4gICAgfSkge1xyXG4gICAgICAgIHRoaXMuaWQgPSBpZFxyXG4gICAgICAgIHRoaXMuc2VsZWN0b3IgPSBlbGVtZW50XHJcbiAgICAgICAgdGhpcy5zZWxlY3RvckNoaWxkcmVuID0ge1xyXG4gICAgICAgICAgICAuLi5lbGVtZW50c1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1QcmVmaXggPSBQcmVmaXgoJ3RyYW5zZm9ybScpXHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5vbk1vdXNlV2hlZWxFdmVudCA9IHRoaXMub25Nb3VzZVdoZWVsLmJpbmQodGhpcylcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGUgKCkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZWxlY3RvcilcclxuICAgICAgICB0aGlzLmVsZW1lbnRzID0ge31cclxuXHJcbiAgICAgICAgdGhpcy5zY3JvbGwgPSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnQ6IDAsXHJcbiAgICAgICAgICAgIHRhcmdldDogMCxcclxuICAgICAgICAgICAgbGFzdDowLFxyXG4gICAgICAgICAgICBsaW1pdDogMFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWFjaCh0aGlzLnNlbGVjdG9yQ2hpbGRyZW4sIChlbnRyeSwga2V5KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MRWxlbWVudCB8fCBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5Ob2RlTGlzdCB8fCBBcnJheS5pc0FycmF5KGVudHJ5KSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZW50cnlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZW50cnkpXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBudWxsXHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVudHJ5KVxyXG4gICAgICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHNob3cgKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25JbiA9IEdTQVAudGltZWxpbmUoKVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25Jbi5mcm9tVG8odGhpcy5lbGVtZW50LCB7XHJcbiAgICAgICAgICAgICAgICBhdXRvQWxwaGE6IDBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgYXV0b0FscGhhOiAxLFxyXG4gICAgICAgICAgICAgICAgb25Db21wbGV0ZTogcmVzb2x2ZVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25Jbi5jYWxsKCBfID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKVxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBoaWRlICgpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25PdXQgPSBHU0FQLnRpbWVsaW5lKClcclxuXHJcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uT3V0LnRvKHRoaXMuZWxlbWVudCwge1xyXG4gICAgICAgICAgICAgICAgYXV0b0FscGhhOiAwLFxyXG4gICAgICAgICAgICAgICAgb25Db21wbGV0ZTogcmVzb2x2ZVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZVdoZWVsKGV2ZW50KSB7XHJcbiAgICAgICAgY29uc3QgeyBkZWx0YVkgfSA9IGV2ZW50XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zY3JvbGwudGFyZ2V0KTtcclxuICAgICAgICB0aGlzLnNjcm9sbC50YXJnZXQgKz0gZGVsdGFZXHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zY3JvbGwudGFyZ2V0KTtcclxuICAgIH1cclxuXHJcbiAgICBvblJlc2l6ZSgpIHtcclxuICAgICAgICB0aGlzLnNjcm9sbC5saW1pdCA9IHRoaXMuZWxlbWVudHMud3JhcHBlci5jbGllbnRIZWlnaHQgLSB3aW5kb3cuaW5uZXJIZWlnaHRcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKSB7XHJcbiAgICAgICAgdGhpcy5zY3JvbGwudGFyZ2V0ID0gR1NBUC51dGlscy5jbGFtcCgwLCB0aGlzLnNjcm9sbC5saW1pdCwgdGhpcy5zY3JvbGwudGFyZ2V0KVxyXG5cclxuICAgICAgICBpZiAodGhpcy5zY3JvbGwudGFyZ2V0IDwgMC4wMSkge1xyXG4gICAgICAgICAgICB0YXJnZXQgPSAwXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNjcm9sbC5jdXJyZW50ID0gR1NBUC51dGlscy5pbnRlcnBvbGF0ZSh0aGlzLnNjcm9sbC5jdXJyZW50LCB0aGlzLnNjcm9sbC50YXJnZXQsIDAuMSlcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudHMud3JhcHBlcikge1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzLndyYXBwZXIuc3R5bGVbdGhpcy50cmFuc2Zvcm1QcmVmaXhdID0gYHRyYW5zbGF0ZVkoLSR7dGhpcy5zY3JvbGwuY3VycmVudH1weClgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZEV2ZW50TGlzdGVuZXJzICgpIHtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V3aGVlbCcsIHRoaXMub25Nb3VzZVdoZWVsRXZlbnQpXHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMgKCkge1xyXG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXdoZWVsJywgdGhpcy5vbk1vdXNlV2hlZWxFdmVudClcclxuICAgIH1cclxufSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjVmODIzMmE0OWFhMDkyYzNhZTVjXCIpIl0sIm5hbWVzIjpbIlBhZ2UiLCJjb25zdHJ1Y3RvciIsImlkIiwiZWxlbWVudCIsImVsZW1lbnRzIiwidGhpcyIsInNlbGVjdG9yIiwic2VsZWN0b3JDaGlsZHJlbiIsInRyYW5zZm9ybVByZWZpeCIsIlByZWZpeCIsIm9uTW91c2VXaGVlbEV2ZW50Iiwib25Nb3VzZVdoZWVsIiwiYmluZCIsImNyZWF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNjcm9sbCIsImN1cnJlbnQiLCJ0YXJnZXQiLCJsYXN0IiwibGltaXQiLCJlYWNoIiwiZW50cnkiLCJrZXkiLCJ3aW5kb3ciLCJIVE1MRWxlbWVudCIsIk5vZGVMaXN0IiwiQXJyYXkiLCJpc0FycmF5IiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsInNob3ciLCJQcm9taXNlIiwicmVzb2x2ZSIsImFuaW1hdGlvbkluIiwiR1NBUCIsImZyb21UbyIsImF1dG9BbHBoYSIsIm9uQ29tcGxldGUiLCJjYWxsIiwiXyIsImFkZEV2ZW50TGlzdGVuZXJzIiwiaGlkZSIsInJlbW92ZUV2ZW50TGlzdGVuZXJzIiwiYW5pbWF0aW9uT3V0IiwidG8iLCJldmVudCIsImRlbHRhWSIsImNvbnNvbGUiLCJsb2ciLCJvblJlc2l6ZSIsIndyYXBwZXIiLCJjbGllbnRIZWlnaHQiLCJpbm5lckhlaWdodCIsInVwZGF0ZSIsInN0eWxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=