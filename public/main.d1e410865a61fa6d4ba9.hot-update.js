/*! For license information please see main.d1e410865a61fa6d4ba9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateboilerplate("main",{"./app/components/Preloader.js":(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});var s=n("./node_modules/lodash/each.js"),o=n.n(s),a=n("./node_modules/gsap/index.js");Object(function(){var e=new Error("Cannot find module 'utils/text'");throw e.code="MODULE_NOT_FOUND",e}());var l=n("./app/classes/Component.js");class r extends l.default{constructor(){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",images:document.querySelectorAll("img")}}),this.elements.titleSpans=Object(function(){var e=new Error("Cannot find module 'utils/text'");throw e.code="MODULE_NOT_FOUND",e}())({element:this.elements.title,expression:"<br>"}),this.length=0,this.createLoader()}createLoader(){o()(this.elements.images,(e=>{e.onload=t=>this.onAssetLoaded(e),e.src=e.getAttribute("data-src")}))}onAssetLoaded(e){this.length+=1;const t=this.length/this.elements.images.length;this.elements.number.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onLoaded()}onLoaded(){return new Promise((e=>{this.animateOut=a.default.timeline({delay:2}),a.default.to(this.element,{autoAlpha:0}),this.animateOut.call((e=>{}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}}},(function(e){e.h=()=>"f854c2c6d7629b4f3330"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5kMWU0MTA4NjVhNjFmYTZkNGJhOS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7cVdBTWUsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ25DQyxjQUNJQyxNQUFNLENBQ0ZDLFFBQVMsYUFDVEMsU0FBVSxDQUNOQyxNQUFPLG1CQUNQQyxPQUFRLHFCQUNSQyxPQUFRQyxTQUFTQyxpQkFBaUIsVUFJMUNDLEtBQUtOLFNBQVNPLFdBQWFDLE9BQUFBLFdBQUFBLElBQUFBLEVBQUFBLElBQUFBLE1BQUFBLG1DQUFBQSxNQUFBQSxFQUFBQSxLQUFBQSxtQkFBQUEsRUFBQUEsR0FBQUEsQ0FBTSxDQUM3QlQsUUFBU08sS0FBS04sU0FBU0MsTUFDdkJRLFdBQVksU0FFaEJILEtBQUtJLE9BQVMsRUFFZEosS0FBS0ssZUFHVEEsZUFDSUMsR0FBQUEsQ0FBS04sS0FBS04sU0FBU0csUUFBUUosSUFDdkJBLEVBQVFjLE9BQVNDLEdBQUtSLEtBQUtTLGNBQWNoQixHQUN6Q0EsRUFBUWlCLElBQU1qQixFQUFRa0IsYUFBYSxlQUkzQ0YsY0FBY0csR0FDVlosS0FBS0ksUUFBVSxFQUVmLE1BQU1TLEVBQVViLEtBQUtJLE9BQVNKLEtBQUtOLFNBQVNHLE9BQU9PLE9BQ25ESixLQUFLTixTQUFTRSxPQUFPa0IsVUFBYSxHQUFFQyxLQUFLQyxNQUFpQixJQUFWSCxNQUVoQyxJQUFaQSxHQUNBYixLQUFLaUIsV0FJYkEsV0FDSSxPQUFPLElBQUlDLFNBQVFDLElBQ2ZuQixLQUFLb0IsV0FBYUMsRUFBQUEsUUFBQUEsU0FBYyxDQUM1QkMsTUFBTyxJQUdYRCxFQUFBQSxRQUFBQSxHQUFRckIsS0FBS1AsUUFBUyxDQUNsQjhCLFVBQVcsSUFHZnZCLEtBQUtvQixXQUFXSSxNQUFNaEIsV0FNOUJpQixVQUNJekIsS0FBS1AsUUFBUWlDLFdBQVdDLFlBQVkzQixLQUFLUCwwQkM3RGpEbUMsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2JvaWxlcnBsYXRlLy4vYXBwL2NvbXBvbmVudHMvUHJlbG9hZGVyLmpzIiwid2VicGFjazovL2JvaWxlcnBsYXRlL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCdcclxuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcclxuaW1wb3J0IHsgc3BsaXQgfSBmcm9tICd1dGlscy90ZXh0J1xyXG5cclxuaW1wb3J0IENvbXBvbmVudCBmcm9tICcuLi9jbGFzc2VzL0NvbXBvbmVudCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByZWxvYWRlciBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcih7XHJcbiAgICAgICAgICAgIGVsZW1lbnQ6ICcucHJlbG9hZGVyJyxcclxuICAgICAgICAgICAgZWxlbWVudHM6IHtcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAnLnByZWxvYWRlcl9fdGV4dCcsXHJcbiAgICAgICAgICAgICAgICBudW1iZXI6ICcucHJlbG9hZGVyX19udW1iZXInLFxyXG4gICAgICAgICAgICAgICAgaW1hZ2VzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdpbWcnKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgdGhpcy5lbGVtZW50cy50aXRsZVNwYW5zID0gc3BsaXQoe1xyXG4gICAgICAgICAgICBlbGVtZW50OiB0aGlzLmVsZW1lbnRzLnRpdGxlLFxyXG4gICAgICAgICAgICBleHByZXNzaW9uOiAnPGJyPidcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMubGVuZ3RoID0gMFxyXG5cclxuICAgICAgICB0aGlzLmNyZWF0ZUxvYWRlcigpXHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlTG9hZGVyKCkge1xyXG4gICAgICAgIGVhY2godGhpcy5lbGVtZW50cy5pbWFnZXMsIGVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICBlbGVtZW50Lm9ubG9hZCA9IF8gPT4gdGhpcy5vbkFzc2V0TG9hZGVkKGVsZW1lbnQpXHJcbiAgICAgICAgICAgIGVsZW1lbnQuc3JjID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJylcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIG9uQXNzZXRMb2FkZWQoaW1hZ2UpIHtcclxuICAgICAgICB0aGlzLmxlbmd0aCArPSAxXHJcblxyXG4gICAgICAgIGNvbnN0IHBlcmNlbnQgPSB0aGlzLmxlbmd0aCAvIHRoaXMuZWxlbWVudHMuaW1hZ2VzLmxlbmd0aFxyXG4gICAgICAgIHRoaXMuZWxlbWVudHMubnVtYmVyLmlubmVySFRNTCA9IGAke01hdGgucm91bmQoIHBlcmNlbnQgKiAxMDApfSVgXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKHBlcmNlbnQgPT09IDEpIHtcclxuICAgICAgICAgICAgdGhpcy5vbkxvYWRlZCgpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uTG9hZGVkKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5hbmltYXRlT3V0ID0gR1NBUC50aW1lbGluZSh7XHJcbiAgICAgICAgICAgICAgICBkZWxheTogMlxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgR1NBUC50byh0aGlzLmVsZW1lbnQsIHtcclxuICAgICAgICAgICAgICAgIGF1dG9BbHBoYTogMFxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRlT3V0LmNhbGwoIF8gPT4ge1xyXG4gICAgICAgICAgICAgICAgLy90aGlzLmVtaXQoJ2NvbXBsZXRlZCcpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBkZXN0cm95ICgpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpXHJcbiAgICB9XHJcbn1cclxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiZjg1NGMyYzZkNzYyOWI0ZjMzMzBcIikiXSwibmFtZXMiOlsiUHJlbG9hZGVyIiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJzdXBlciIsImVsZW1lbnQiLCJlbGVtZW50cyIsInRpdGxlIiwibnVtYmVyIiwiaW1hZ2VzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGhpcyIsInRpdGxlU3BhbnMiLCJzcGxpdCIsImV4cHJlc3Npb24iLCJsZW5ndGgiLCJjcmVhdGVMb2FkZXIiLCJlYWNoIiwib25sb2FkIiwiXyIsIm9uQXNzZXRMb2FkZWQiLCJzcmMiLCJnZXRBdHRyaWJ1dGUiLCJpbWFnZSIsInBlcmNlbnQiLCJpbm5lckhUTUwiLCJNYXRoIiwicm91bmQiLCJvbkxvYWRlZCIsIlByb21pc2UiLCJyZXNvbHZlIiwiYW5pbWF0ZU91dCIsIkdTQVAiLCJkZWxheSIsImF1dG9BbHBoYSIsImNhbGwiLCJkZXN0cm95IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9