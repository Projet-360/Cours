/*! For license information please see main.98c934f0e7e56544ee52.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateboilerplate("main",{"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js":(e,t,n)=>{var r=n("./node_modules/mini-css-extract-plugin/dist/hmr/normalize-url.js"),i=Object.create(null),o="undefined"==typeof document,c=Array.prototype.forEach;function s(){}function l(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(u(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var n=e.cloneNode();n.isLoaded=!1,n.addEventListener("load",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.addEventListener("error",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(n,e.nextSibling):e.parentNode.appendChild(n)}}function a(e){if(!e)return!1;var t=document.querySelectorAll("link"),n=!1;return c.call(t,(function(t){if(t.href){var i=function(e,t){var n;return e=r(e,{stripWWW:!1}),t.some((function(r){e.indexOf(t)>-1&&(n=r)})),n}(t.href,e);u(i)&&!0!==t.visited&&i&&(l(t,i),n=!0)}})),n}function d(){var e=document.querySelectorAll("link");c.call(e,(function(e){!0!==e.visited&&l(e)}))}function u(e){return!!/^https?:/i.test(e)}e.exports=function(e,t){if(o)return console.log("no window.document found, will not HMR CSS"),s;var n,c,l,u=function(e){var t=i[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var n=document.getElementsByTagName("script"),o=n[n.length-1];o&&(t=o.src)}i[e]=t}return function(e){if(!t)return null;var n=t.split(/([^\\/]+)\.js$/),i=n&&n[1];return i&&e?e.split(",").map((function(e){var n=new RegExp("".concat(i,"\\.js$"),"g");return r(t.replace(n,"".concat(e.replace(/{fileName}/g,i),".css")))})):[t.replace(".js",".css")]}}(e);return n=function(){var e=u(t.filename),n=a(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void d();n?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),d())},c=50,l=0,function(){var e=this,t=arguments,r=function(){return n.apply(e,t)};clearTimeout(l),l=setTimeout(r,c)}}},"./node_modules/mini-css-extract-plugin/dist/hmr/normalize-url.js":e=>{e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",n=e.replace(new RegExp(t,"i"),"").split("/"),r=n[0].toLowerCase().replace(/\.$/,"");return n[0]="",t+r+n.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},"./styles/index.scss":(e,t,n)=>{n.r(t);var r=n("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(e.id,{publicPath:"",locals:!1});e.hot.dispose(r),e.hot.accept(void 0,r)}},(function(e){e.h=()=>"c9a56dacfa973f069673"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,