/*! For license information please see main.ab13e1851d5ee2c8d031.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateboilerplate("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});var n=s("./node_modules/gsap/index.js"),l=s("./node_modules/prefix/index.js"),i=s.n(l),o=s("./node_modules/lodash/each.js"),r=s.n(o);class a{constructor({id:e,element:t,elements:s}){this.id=e,this.selector=t,this.selectorChildren={...s},this.scroll={current:0,target:0,last:0},this.transformPrefix=i()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0},r()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}show(){return new Promise((e=>{this.animationIn=n.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1,onComplete:e}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=n.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{deltaY:t}=e;console.log(this.scroll.target),this.scroll.target+=t,console.log(this.scroll.target)}update(){console.log(this.scroll.target),this.scroll.current=n.default.utils.interpolate(this.scroll.target,this.scroll.current,.1),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"01cf24b44db8e25bd4d2"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5hYjEzZTE4NTFkNWVlMmM4ZDAzMS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7MlBBSWUsTUFBTUEsRUFDakJDLGFBQWEsR0FDVEMsRUFEUyxRQUVUQyxFQUZTLFNBR1RDLElBRUFDLEtBQUtILEdBQUtBLEVBQ1ZHLEtBQUtDLFNBQVdILEVBQ2hCRSxLQUFLRSxpQkFBbUIsSUFDakJILEdBR1BDLEtBQUtHLE9BQVMsQ0FDVkMsUUFBUyxFQUNUQyxPQUFRLEVBQ1JDLEtBQUssR0FHVE4sS0FBS08sZ0JBQWtCQyxHQUFBQSxDQUFPLGFBRTlCUixLQUFLUyxrQkFBb0JULEtBQUtVLGFBQWFDLEtBQUtYLE1BR3BEWSxTQUNJWixLQUFLRixRQUFVZSxTQUFTQyxjQUFjZCxLQUFLQyxVQUMzQ0QsS0FBS0QsU0FBVyxHQUVoQkMsS0FBS0csT0FBUyxDQUNWQyxRQUFTLEVBQ1RDLE9BQVEsRUFDUkMsS0FBSyxHQUdUUyxHQUFBQSxDQUFLZixLQUFLRSxrQkFBa0IsQ0FBQ2MsRUFBT0MsS0FDNUJELGFBQWlCRSxPQUFPQyxhQUFlSCxhQUFpQkUsT0FBT0UsVUFBWUMsTUFBTUMsUUFBUU4sR0FDekZoQixLQUFLRCxTQUFTa0IsR0FBT0QsR0FFckJoQixLQUFLRCxTQUFTa0IsR0FBT0osU0FBU1UsaUJBQWlCUCxHQUViLElBQTlCaEIsS0FBS0QsU0FBU2tCLEdBQUtPLE9BQ25CeEIsS0FBS0QsU0FBU2tCLEdBQU8sS0FDZ0IsSUFBOUJqQixLQUFLRCxTQUFTa0IsR0FBS08sU0FDMUJ4QixLQUFLRCxTQUFTa0IsR0FBT0osU0FBU0MsY0FBY0UsUUFNNURTLE9BQ0ksT0FBTyxJQUFJQyxTQUFRQyxJQUNmM0IsS0FBSzRCLFlBQWNDLEVBQUFBLFFBQUFBLFdBRW5CN0IsS0FBSzRCLFlBQVlFLE9BQU85QixLQUFLRixRQUFTLENBQ2xDaUMsVUFBVyxHQUVmLENBQ0lBLFVBQVcsRUFDWEMsV0FBWUwsSUFHaEIzQixLQUFLNEIsWUFBWUssTUFBTUMsSUFDbkJsQyxLQUFLbUMsb0JBQ0xSLFVBS1pTLE9BQ0ksT0FBTyxJQUFJVixTQUFRQyxJQUNmM0IsS0FBS3FDLHVCQUVMckMsS0FBS3NDLGFBQWVULEVBQUFBLFFBQUFBLFdBRXBCN0IsS0FBS3NDLGFBQWFDLEdBQUd2QyxLQUFLRixRQUFTLENBQy9CaUMsVUFBVyxFQUNYQyxXQUFZTCxPQUt4QmpCLGFBQWE4QixHQUNULE1BQU0sT0FBRUMsR0FBV0QsRUFDbkJFLFFBQVFDLElBQUkzQyxLQUFLRyxPQUFPRSxRQUN4QkwsS0FBS0csT0FBT0UsUUFBVW9DLEVBQ3RCQyxRQUFRQyxJQUFJM0MsS0FBS0csT0FBT0UsUUFHNUJ1QyxTQUNJRixRQUFRQyxJQUFJM0MsS0FBS0csT0FBT0UsUUFDeEJMLEtBQUtHLE9BQU9DLFFBQVV5QixFQUFBQSxRQUFBQSxNQUFBQSxZQUF1QjdCLEtBQUtHLE9BQU9FLE9BQVFMLEtBQUtHLE9BQU9DLFFBQVMsSUFFbEZKLEtBQUtELFNBQVM4QyxVQUNkN0MsS0FBS0QsU0FBUzhDLFFBQVFDLE1BQU05QyxLQUFLTyxpQkFBb0IsZUFBY1AsS0FBS0csT0FBT0MsY0FJdkYrQixvQkFDSWpCLE9BQU82QixpQkFBaUIsYUFBYy9DLEtBQUtTLG1CQUcvQzRCLHVCQUNJbkIsT0FBTzhCLG9CQUFvQixhQUFjaEQsS0FBS1Msb0NDekd0RHdDLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS8uL2FwcC9jbGFzc2VzL1BhZ2UuanMiLCJ3ZWJwYWNrOi8vYm9pbGVycGxhdGUvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXHJcbmltcG9ydCBQcmVmaXggZnJvbSAncHJlZml4J1xyXG5pbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2Uge1xyXG4gICAgY29uc3RydWN0b3IgKHtcclxuICAgICAgICBpZCxcclxuICAgICAgICBlbGVtZW50LFxyXG4gICAgICAgIGVsZW1lbnRzXHJcbiAgICB9KSB7XHJcbiAgICAgICAgdGhpcy5pZCA9IGlkXHJcbiAgICAgICAgdGhpcy5zZWxlY3RvciA9IGVsZW1lbnRcclxuICAgICAgICB0aGlzLnNlbGVjdG9yQ2hpbGRyZW4gPSB7XHJcbiAgICAgICAgICAgIC4uLmVsZW1lbnRzXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnNjcm9sbCA9IHtcclxuICAgICAgICAgICAgY3VycmVudDogMCxcclxuICAgICAgICAgICAgdGFyZ2V0OiAwLFxyXG4gICAgICAgICAgICBsYXN0OjBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMudHJhbnNmb3JtUHJlZml4ID0gUHJlZml4KCd0cmFuc2Zvcm0nKVxyXG4gICAgICAgIFxyXG4gICAgICAgIHRoaXMub25Nb3VzZVdoZWVsRXZlbnQgPSB0aGlzLm9uTW91c2VXaGVlbC5iaW5kKHRoaXMpXHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlICgpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc2VsZWN0b3IpXHJcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IHt9XHJcblxyXG4gICAgICAgIHRoaXMuc2Nyb2xsID0ge1xyXG4gICAgICAgICAgICBjdXJyZW50OiAwLFxyXG4gICAgICAgICAgICB0YXJnZXQ6IDAsXHJcbiAgICAgICAgICAgIGxhc3Q6MFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWFjaCh0aGlzLnNlbGVjdG9yQ2hpbGRyZW4sIChlbnRyeSwga2V5KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MRWxlbWVudCB8fCBlbnRyeSBpbnN0YW5jZW9mIHdpbmRvdy5Ob2RlTGlzdCB8fCBBcnJheS5pc0FycmF5KGVudHJ5KSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZW50cnlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoZW50cnkpXHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBudWxsXHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZWxlbWVudHNba2V5XS5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVudHJ5KVxyXG4gICAgICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHNob3cgKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25JbiA9IEdTQVAudGltZWxpbmUoKVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25Jbi5mcm9tVG8odGhpcy5lbGVtZW50LCB7XHJcbiAgICAgICAgICAgICAgICBhdXRvQWxwaGE6IDBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgYXV0b0FscGhhOiAxLFxyXG4gICAgICAgICAgICAgICAgb25Db21wbGV0ZTogcmVzb2x2ZVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25Jbi5jYWxsKCBfID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKVxyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBoaWRlICgpIHtcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25PdXQgPSBHU0FQLnRpbWVsaW5lKClcclxuXHJcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uT3V0LnRvKHRoaXMuZWxlbWVudCwge1xyXG4gICAgICAgICAgICAgICAgYXV0b0FscGhhOiAwLFxyXG4gICAgICAgICAgICAgICAgb25Db21wbGV0ZTogcmVzb2x2ZVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZVdoZWVsKGV2ZW50KSB7XHJcbiAgICAgICAgY29uc3QgeyBkZWx0YVkgfSA9IGV2ZW50XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zY3JvbGwudGFyZ2V0KTtcclxuICAgICAgICB0aGlzLnNjcm9sbC50YXJnZXQgKz0gZGVsdGFZXHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zY3JvbGwudGFyZ2V0KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5zY3JvbGwudGFyZ2V0KVxyXG4gICAgICAgIHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSBHU0FQLnV0aWxzLmludGVycG9sYXRlKHRoaXMuc2Nyb2xsLnRhcmdldCwgdGhpcy5zY3JvbGwuY3VycmVudCwgMC4xKVxyXG5cclxuICAgICAgICBpZiAodGhpcy5lbGVtZW50cy53cmFwcGVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudHMud3JhcHBlci5zdHlsZVt0aGlzLnRyYW5zZm9ybVByZWZpeF0gPSBgdHJhbnNsYXRlWSgtJHt0aGlzLnNjcm9sbC5jdXJyZW50fXB4KWBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRXZlbnRMaXN0ZW5lcnMgKCkge1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXdoZWVsJywgdGhpcy5vbk1vdXNlV2hlZWxFdmVudClcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVFdmVudExpc3RlbmVycyAoKSB7XHJcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNld2hlZWwnLCB0aGlzLm9uTW91c2VXaGVlbEV2ZW50KVxyXG4gICAgfVxyXG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiMDFjZjI0YjQ0ZGI4ZTI1YmQ0ZDJcIikiXSwibmFtZXMiOlsiUGFnZSIsImNvbnN0cnVjdG9yIiwiaWQiLCJlbGVtZW50IiwiZWxlbWVudHMiLCJ0aGlzIiwic2VsZWN0b3IiLCJzZWxlY3RvckNoaWxkcmVuIiwic2Nyb2xsIiwiY3VycmVudCIsInRhcmdldCIsImxhc3QiLCJ0cmFuc2Zvcm1QcmVmaXgiLCJQcmVmaXgiLCJvbk1vdXNlV2hlZWxFdmVudCIsIm9uTW91c2VXaGVlbCIsImJpbmQiLCJjcmVhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJlYWNoIiwiZW50cnkiLCJrZXkiLCJ3aW5kb3ciLCJIVE1MRWxlbWVudCIsIk5vZGVMaXN0IiwiQXJyYXkiLCJpc0FycmF5IiwicXVlcnlTZWxlY3RvckFsbCIsImxlbmd0aCIsInNob3ciLCJQcm9taXNlIiwicmVzb2x2ZSIsImFuaW1hdGlvbkluIiwiR1NBUCIsImZyb21UbyIsImF1dG9BbHBoYSIsIm9uQ29tcGxldGUiLCJjYWxsIiwiXyIsImFkZEV2ZW50TGlzdGVuZXJzIiwiaGlkZSIsInJlbW92ZUV2ZW50TGlzdGVuZXJzIiwiYW5pbWF0aW9uT3V0IiwidG8iLCJldmVudCIsImRlbHRhWSIsImNvbnNvbGUiLCJsb2ciLCJ1cGRhdGUiLCJ3cmFwcGVyIiwic3R5bGUiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==