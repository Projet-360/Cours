/*! For license information please see main.d5d133c845778b57b7fe.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdateboilerplate("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});var l=s("./node_modules/gsap/index.js"),n=s("./node_modules/prefix/index.js"),i=s.n(n),o=s("./node_modules/lodash/each.js"),r=s.n(o);class a{constructor({id:e,element:t,elements:s}){this.id=e,this.selector=t,this.selectorChildren={...s},this.scroll={current:0,target:0,last:0},this.transformPrefix=i()("transform"),this.onMouseWheelEvent=this.onMouseWheel.bind(this)}create(){this.element=document.querySelector(this.selector),this.elements={},this.scroll={current:0,target:0,last:0},r()(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements[t]=e:(this.elements[t]=document.querySelectorAll(e),0===this.elements[t].length?this.elements[t]=null:1===this.elements[t].length&&(this.elements[t]=document.querySelector(e)))}))}show(){return new Promise((e=>{this.animationIn=l.default.timeline(),this.animationIn.fromTo(this.element,{autoAlpha:0},{autoAlpha:1,onComplete:e}),this.animationIn.call((t=>{this.addEventListeners(),e()}))}))}hide(){return new Promise((e=>{this.removeEventListeners(),this.animationOut=l.default.timeline(),this.animationOut.to(this.element,{autoAlpha:0,onComplete:e})}))}onMouseWheel(e){const{deltaY:t}=e;console.log(this.scroll.target),this.scroll.target+=t,console.log(this.scroll.target)}update(){console.log(this.scroll.target),this.scroll.current=l.default.utils.interpolate(this.scroll.current,this.scroll.target,.1),this.scroll.current=l.default.utils.clamp(0,this.scroll.limit,this.scroll.current),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}addEventListeners(){window.addEventListener("mousewheel",this.onMouseWheelEvent)}removeEventListeners(){window.removeEventListener("mousewheel",this.onMouseWheelEvent)}}}},(function(e){e.h=()=>"dc939eaaf78f0416e5e2"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5kNWQxMzNjODQ1Nzc4YjU3YjdmZS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7MlBBSWUsTUFBTUEsRUFDakJDLGFBQWEsR0FDVEMsRUFEUyxRQUVUQyxFQUZTLFNBR1RDLElBRUFDLEtBQUtILEdBQUtBLEVBQ1ZHLEtBQUtDLFNBQVdILEVBQ2hCRSxLQUFLRSxpQkFBbUIsSUFDakJILEdBR1BDLEtBQUtHLE9BQVMsQ0FDVkMsUUFBUyxFQUNUQyxPQUFRLEVBQ1JDLEtBQUssR0FHVE4sS0FBS08sZ0JBQWtCQyxHQUFBQSxDQUFPLGFBRTlCUixLQUFLUyxrQkFBb0JULEtBQUtVLGFBQWFDLEtBQUtYLE1BR3BEWSxTQUNJWixLQUFLRixRQUFVZSxTQUFTQyxjQUFjZCxLQUFLQyxVQUMzQ0QsS0FBS0QsU0FBVyxHQUVoQkMsS0FBS0csT0FBUyxDQUNWQyxRQUFTLEVBQ1RDLE9BQVEsRUFDUkMsS0FBSyxHQUdUUyxHQUFBQSxDQUFLZixLQUFLRSxrQkFBa0IsQ0FBQ2MsRUFBT0MsS0FDNUJELGFBQWlCRSxPQUFPQyxhQUFlSCxhQUFpQkUsT0FBT0UsVUFBWUMsTUFBTUMsUUFBUU4sR0FDekZoQixLQUFLRCxTQUFTa0IsR0FBT0QsR0FFckJoQixLQUFLRCxTQUFTa0IsR0FBT0osU0FBU1UsaUJBQWlCUCxHQUViLElBQTlCaEIsS0FBS0QsU0FBU2tCLEdBQUtPLE9BQ25CeEIsS0FBS0QsU0FBU2tCLEdBQU8sS0FDZ0IsSUFBOUJqQixLQUFLRCxTQUFTa0IsR0FBS08sU0FDMUJ4QixLQUFLRCxTQUFTa0IsR0FBT0osU0FBU0MsY0FBY0UsUUFNNURTLE9BQ0ksT0FBTyxJQUFJQyxTQUFRQyxJQUNmM0IsS0FBSzRCLFlBQWNDLEVBQUFBLFFBQUFBLFdBRW5CN0IsS0FBSzRCLFlBQVlFLE9BQU85QixLQUFLRixRQUFTLENBQ2xDaUMsVUFBVyxHQUVmLENBQ0lBLFVBQVcsRUFDWEMsV0FBWUwsSUFHaEIzQixLQUFLNEIsWUFBWUssTUFBTUMsSUFDbkJsQyxLQUFLbUMsb0JBQ0xSLFVBS1pTLE9BQ0ksT0FBTyxJQUFJVixTQUFRQyxJQUNmM0IsS0FBS3FDLHVCQUVMckMsS0FBS3NDLGFBQWVULEVBQUFBLFFBQUFBLFdBRXBCN0IsS0FBS3NDLGFBQWFDLEdBQUd2QyxLQUFLRixRQUFTLENBQy9CaUMsVUFBVyxFQUNYQyxXQUFZTCxPQUt4QmpCLGFBQWE4QixHQUNULE1BQU0sT0FBRUMsR0FBV0QsRUFDbkJFLFFBQVFDLElBQUkzQyxLQUFLRyxPQUFPRSxRQUN4QkwsS0FBS0csT0FBT0UsUUFBVW9DLEVBQ3RCQyxRQUFRQyxJQUFJM0MsS0FBS0csT0FBT0UsUUFHNUJ1QyxTQUNJRixRQUFRQyxJQUFJM0MsS0FBS0csT0FBT0UsUUFDeEJMLEtBQUtHLE9BQU9DLFFBQVV5QixFQUFBQSxRQUFBQSxNQUFBQSxZQUF1QjdCLEtBQUtHLE9BQU9DLFFBQVNKLEtBQUtHLE9BQU9FLE9BQVEsSUFDdEZMLEtBQUtHLE9BQU9DLFFBQVV5QixFQUFBQSxRQUFBQSxNQUFBQSxNQUFpQixFQUFHN0IsS0FBS0csT0FBTzBDLE1BQU83QyxLQUFLRyxPQUFPQyxTQUVyRUosS0FBS0QsU0FBUytDLFVBQ2Q5QyxLQUFLRCxTQUFTK0MsUUFBUUMsTUFBTS9DLEtBQUtPLGlCQUFvQixlQUFjUCxLQUFLRyxPQUFPQyxjQUl2RitCLG9CQUNJakIsT0FBTzhCLGlCQUFpQixhQUFjaEQsS0FBS1MsbUJBRy9DNEIsdUJBQ0luQixPQUFPK0Isb0JBQW9CLGFBQWNqRCxLQUFLUyxvQ0MxR3REeUMsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2JvaWxlcnBsYXRlLy4vYXBwL2NsYXNzZXMvUGFnZS5qcyIsIndlYnBhY2s6Ly9ib2lsZXJwbGF0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcclxuaW1wb3J0IFByZWZpeCBmcm9tICdwcmVmaXgnXHJcbmltcG9ydCBlYWNoIGZyb20gJ2xvZGFzaC9lYWNoJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnZSB7XHJcbiAgICBjb25zdHJ1Y3RvciAoe1xyXG4gICAgICAgIGlkLFxyXG4gICAgICAgIGVsZW1lbnQsXHJcbiAgICAgICAgZWxlbWVudHNcclxuICAgIH0pIHtcclxuICAgICAgICB0aGlzLmlkID0gaWRcclxuICAgICAgICB0aGlzLnNlbGVjdG9yID0gZWxlbWVudFxyXG4gICAgICAgIHRoaXMuc2VsZWN0b3JDaGlsZHJlbiA9IHtcclxuICAgICAgICAgICAgLi4uZWxlbWVudHNcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuc2Nyb2xsID0ge1xyXG4gICAgICAgICAgICBjdXJyZW50OiAwLFxyXG4gICAgICAgICAgICB0YXJnZXQ6IDAsXHJcbiAgICAgICAgICAgIGxhc3Q6MFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1QcmVmaXggPSBQcmVmaXgoJ3RyYW5zZm9ybScpXHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5vbk1vdXNlV2hlZWxFdmVudCA9IHRoaXMub25Nb3VzZVdoZWVsLmJpbmQodGhpcylcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGUgKCkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5zZWxlY3RvcilcclxuICAgICAgICB0aGlzLmVsZW1lbnRzID0ge31cclxuXHJcbiAgICAgICAgdGhpcy5zY3JvbGwgPSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnQ6IDAsXHJcbiAgICAgICAgICAgIHRhcmdldDogMCxcclxuICAgICAgICAgICAgbGFzdDowXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBlYWNoKHRoaXMuc2VsZWN0b3JDaGlsZHJlbiwgKGVudHJ5LCBrZXkpID0+IHtcclxuICAgICAgICAgICAgaWYgKGVudHJ5IGluc3RhbmNlb2Ygd2luZG93LkhUTUxFbGVtZW50IHx8IGVudHJ5IGluc3RhbmNlb2Ygd2luZG93Lk5vZGVMaXN0IHx8IEFycmF5LmlzQXJyYXkoZW50cnkpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSBlbnRyeVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChlbnRyeSlcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5lbGVtZW50c1trZXldLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IG51bGxcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5lbGVtZW50c1trZXldLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZW50cnkpXHJcbiAgICAgICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc2hvdyAoKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbkluID0gR1NBUC50aW1lbGluZSgpXHJcblxyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbkluLmZyb21Ubyh0aGlzLmVsZW1lbnQsIHtcclxuICAgICAgICAgICAgICAgIGF1dG9BbHBoYTogMFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBhdXRvQWxwaGE6IDEsXHJcbiAgICAgICAgICAgICAgICBvbkNvbXBsZXRlOiByZXNvbHZlXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbkluLmNhbGwoIF8gPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKClcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIGhpZGUgKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVycygpXHJcblxyXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbk91dCA9IEdTQVAudGltZWxpbmUoKVxyXG5cclxuICAgICAgICAgICAgdGhpcy5hbmltYXRpb25PdXQudG8odGhpcy5lbGVtZW50LCB7XHJcbiAgICAgICAgICAgICAgICBhdXRvQWxwaGE6IDAsXHJcbiAgICAgICAgICAgICAgICBvbkNvbXBsZXRlOiByZXNvbHZlXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBvbk1vdXNlV2hlZWwoZXZlbnQpIHtcclxuICAgICAgICBjb25zdCB7IGRlbHRhWSB9ID0gZXZlbnRcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNjcm9sbC50YXJnZXQpO1xyXG4gICAgICAgIHRoaXMuc2Nyb2xsLnRhcmdldCArPSBkZWx0YVlcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNjcm9sbC50YXJnZXQpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNjcm9sbC50YXJnZXQpXHJcbiAgICAgICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IEdTQVAudXRpbHMuaW50ZXJwb2xhdGUodGhpcy5zY3JvbGwuY3VycmVudCwgdGhpcy5zY3JvbGwudGFyZ2V0LCAwLjEpXHJcbiAgICAgICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IEdTQVAudXRpbHMuY2xhbXAoMCwgdGhpcy5zY3JvbGwubGltaXQsIHRoaXMuc2Nyb2xsLmN1cnJlbnQpXHJcblxyXG4gICAgICAgIGlmICh0aGlzLmVsZW1lbnRzLndyYXBwZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5lbGVtZW50cy53cmFwcGVyLnN0eWxlW3RoaXMudHJhbnNmb3JtUHJlZml4XSA9IGB0cmFuc2xhdGVZKC0ke3RoaXMuc2Nyb2xsLmN1cnJlbnR9cHgpYFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhZGRFdmVudExpc3RlbmVycyAoKSB7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNld2hlZWwnLCB0aGlzLm9uTW91c2VXaGVlbEV2ZW50KVxyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXJzICgpIHtcclxuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V3aGVlbCcsIHRoaXMub25Nb3VzZVdoZWVsRXZlbnQpXHJcbiAgICB9XHJcbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCJkYzkzOWVhYWY3OGYwNDE2ZTVlMlwiKSJdLCJuYW1lcyI6WyJQYWdlIiwiY29uc3RydWN0b3IiLCJpZCIsImVsZW1lbnQiLCJlbGVtZW50cyIsInRoaXMiLCJzZWxlY3RvciIsInNlbGVjdG9yQ2hpbGRyZW4iLCJzY3JvbGwiLCJjdXJyZW50IiwidGFyZ2V0IiwibGFzdCIsInRyYW5zZm9ybVByZWZpeCIsIlByZWZpeCIsIm9uTW91c2VXaGVlbEV2ZW50Iiwib25Nb3VzZVdoZWVsIiwiYmluZCIsImNyZWF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImVhY2giLCJlbnRyeSIsImtleSIsIndpbmRvdyIsIkhUTUxFbGVtZW50IiwiTm9kZUxpc3QiLCJBcnJheSIsImlzQXJyYXkiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwic2hvdyIsIlByb21pc2UiLCJyZXNvbHZlIiwiYW5pbWF0aW9uSW4iLCJHU0FQIiwiZnJvbVRvIiwiYXV0b0FscGhhIiwib25Db21wbGV0ZSIsImNhbGwiLCJfIiwiYWRkRXZlbnRMaXN0ZW5lcnMiLCJoaWRlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lcnMiLCJhbmltYXRpb25PdXQiLCJ0byIsImV2ZW50IiwiZGVsdGFZIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZSIsImxpbWl0Iiwid3JhcHBlciIsInN0eWxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=